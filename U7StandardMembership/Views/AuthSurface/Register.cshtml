@using System.Web.Mvc.Html
@using Umbraco.Web
@using U7StandardMembership.Controllers.SurfaceControllers
@using U7StandardMembership.Models
@model RegisterViewModel

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@if (Convert.ToBoolean(TempData["IsSuccessful"]))
{
    <div class="alert alert-success">
        <h4>Yay!</h4>
        <p>Registered succesfully - please your mailbox to continue</p>
    </div>
}
else
{
    using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)

        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Navn", new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Your Name" })
                @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class = "help-block" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, "Email address", new { @class = "control-label" })
                @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", placeholder = "Email Address" })
                @Html.ValidationMessageFor(model => model.EmailAddress, string.Empty, new { @class = "help-block" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Password", new { @class = "control-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(model => model.Password, string.Empty, new { @class = "help-block" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, "Confirm password", new { @class = "control-label" })
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, string.Empty, new { @class = "help-block" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProfileURL, new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon">http://site.com/user/</span>
                    @Html.TextBoxFor(model => model.ProfileURL, new { @class = "form-control", placeholder = "joebloggs" })
                </div>
                @Html.ValidationMessageFor(model => model.ProfileURL, string.Empty, new { @class = "help-block" })
            </div>

            <button type="submit" class="btn btn-default">"Register"</button>

        </fieldset>
    }
}